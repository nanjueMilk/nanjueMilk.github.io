<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[图片处理]]></title>
    <url>%2F2019%2F03%2F18%2F%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[以下代码是以vue语法为主，如果使用其他框架，请更改语法 1 图片上传并获取图片方法1.1 图片上传本方法是获取图片的文件流，通过formData方法处理图片参数以文件流方式传递到后台（同样支持文件）; 为input绑定change事件，并绑定accept 1&lt;input type=&quot;file&quot; ref=&quot;input&quot; accept=&quot;image/gif,image/jpeg,image/jpg,image/png,image/svg&quot; @change=&quot;uploadImg($event)&quot;&gt; 通过change方法获取图片 123456789uploadImg(e) &#123; var event = e ? e : window.event; var obj = event.srcElement ? event.srcElement : event.target; //obj.files[0]为获取的图片文件流 // getObjectURL方法上传图片方法 var srcs = this.getObjectURL(obj.files[0]); //清除input的方法，防止change事件不触发 this.$refs.input.value = &quot;&quot;&#125; 1.2 获取上传的图片如果在图片上传之前需要预览图片，可以通过以下方法获取图片，url绑定到img标签即可 1234567891011getObjectURL(file) &#123; var url = null; if (window.createObjectURL != undefined) &#123; url = window.createObjectURL(file) &#125; else if (window.URL != undefined) &#123; url = window.URL.createObjectURL(file) &#125; else if (window.webkitURL != undefined) &#123; url = window.webkitURL.createObjectURL(file) &#125; return url;&#125; 2 判断图片链接是否有效 场景：如果后台返回图片链接，如果有效则展示，无效的话不展示 原理：通过img标签引入图片，可以通过img的onload（有效）和onerror（无效）回调来区分 注意回调方法是异步的 1234567891011checkImgExists(imgurl) &#123; var ImgObj = new Image(); ImgObj.src = imgurl; image.onload = function () &#123; return true &#125;; image.onerror = function () &#123; return false &#125;;&#125; 3 图片压缩3.1 图片压缩1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253 /** * * @param &#123;文件&#125; file * @param &#123;配置属性&#125; options * @param &#123;回调函数&#125; callback */loopPhotoCompress(file, options, callback) &#123; options.size = 1;//此处的单位为MB var self = this; var imgtype = &apos;image/jpeg&apos;; // 用FileReader读取文件 var reader = new FileReader(); // 将图片读取为base64 reader.readAsDataURL(file); reader.onload = function (evt) &#123; var base64 = evt.target.result; // 创建图片对象 var img = new Image(); // 用图片对象加载读入的base64 img.src = base64; img.onload = function () &#123; var that = this, canvas = document.createElement(&apos;canvas&apos;), ctx = canvas.getContext(&apos;2d&apos;); canvas.setAttribute(&apos;width&apos;, that.width); canvas.setAttribute(&apos;height&apos;, that.height); // 将图片画入canvas ctx.drawImage(that, 0, 0, that.width, that.height); // 压缩到指定体积以下（M） if (options.size) &#123; var scale = 0.9; (function f(scale) &#123; if (base64.length / 1024 / 1024 &gt; options.size &amp;&amp; scale &gt; 0) &#123; base64 = canvas.toDataURL(imgtype, scale); scale = scale - 0.1; f(scale); &#125; else &#123; callback(self.convertBase64UrlToBlob(base64, file)); &#125; &#125;)(scale); &#125; else if (options.scale) &#123; // 按比率压缩 base64 = canvas.toDataURL(imgtype, options.scale); callback(self.convertBase64UrlToBlob(base64, file)); &#125; &#125; &#125;&#125; 3.2 base64转file文件流12345678910111213141516 /** * 将以base64的图片url数据转换为Blob * @param urlData *用url方式表示的base64图片数据 */convertBase64UrlToBlob(urlData, file) &#123; var arr = urlData.split(&apos;,&apos;), mime = arr[0].match(/:(.*?);/)[1], bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n); while (n--) &#123; u8arr[n] = bstr.charCodeAt(n); &#125; return new File([u8arr], file.name, &#123; type: file.type &#125;);&#125; 4 图片增加马赛克 获取图片写入到canvas，通过检测鼠标的落下，移动、抬起事件，获取矩形 通过getImageData方法获取图片像素点数组 通过改变数据中像素点的颜色（不同像素点交换颜色）setXY方法 getImageData此方法对于跨域图片，浏览器会进行拦截，服务器需要设置允许跨域访问 文件：图片增加马赛克]]></content>
      <categories>
        <category>图片处理</category>
      </categories>
      <tags>
        <tag>图片处理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序开发]]></title>
    <url>%2F2019%2F03%2F12%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[1 什么是小程序？微信小程序 ( Mini Program )，微信创始人张小龙，在2017年1月9日宣布的微信小程序正式上线。 1.1 特点 触手可及，用完即走 拥有和原生App的体验 面对所有用户开放（企业、组织、个人） 套在微信里面的原生App 1.2 运行环境 1.3 宣传方式 小程序搜索入口 &amp; 附近小程序 扫一扫长按识别小程序码 好友分享、群分享 关联公众号 第三方的小程序应用商店 小程序之间的跳转 2 开发环境的准备2.1 注册账号访问注册页面，耐心完成注册即可。 2.2 获取APPID登录成功后，跳转到如下页面，点击开发设置 如下图，可以看到自己的APPID 2.3 安装开发工具下载微信开发者工具微信开发者工具：可以选择编译模式，选择先进入看到的页面，方便开发调试。小程序开发流程：注册小程序 -&gt; 代码开发 -&gt; 提审 -&gt; 上线注：如果有微信公众号认证过，可以通过公众号添加小程序，减少小程序认证的费用。 3 框架框架提供了自己的视图层描述语言 WXML 和 WXSS，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。 3.1 小程序文件结构和传统web对比 通过以上对比得出，传统web 是三层结构。而微信小程序 是四层结构，多了一层 配置.json 3.2 文件目录： .json 后缀的 JSON 配置文件 .wxml 后缀的 WXML 模板文件 .wxss 后缀的 WXSS 样式文件 .js 后缀的 JS 脚本逻辑文件 3.3 json 配置1.app.json 是全局配置：页面路径、界面样式、网络超时时间、底部 tab 等。123456789101112&#123; &quot;pages&quot;:[ &quot;pages/index/index&quot;, &quot;pages/logs/logs&quot; ], &quot;window&quot;:&#123; &quot;backgroundTextStyle&quot;:&quot;light&quot;, &quot;navigationBarBackgroundColor&quot;: &quot;#fff&quot;, &quot;navigationBarTitleText&quot;: &quot;WeChat&quot;, &quot;navigationBarTextStyle&quot;:&quot;black&quot; &#125;&#125; pages字段：用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。 window字段：定义小程序所有页面的顶部背景颜色，文字颜色定义等。 开发者工具配置 project.config.json 页面配置 page.json 独立定义每个页面的一些属性，例如顶部颜色、是否允许下拉刷新等。 3.4 WXML模板 标签 常用组件包装 wx:if 这样的属性及 插值表达式 3.5 WXSS样式 新增的尺寸单位 rpx 全局的样式和局部样式 app.wxss 作为全局样式，会作用于所有页面，局部页面样式 page.wxss 仅对当前页面生效。 WXSS 仅支持部分 CSS 选择器 3.6 常用API 数据请求 12345678910111213141516onLoad: function()&#123; this.getProList();&#125;getProList: function()&#123; var self = this; wx.request(&#123; url:&quot;https://129.199.19:3000&quot;, method:&quot;GET&quot;, success: function(res)&#123; console.log(res); self.setData(&#123; proList:res.data &#125;) &#125; &#125;)&#125; 基础库兼容 12345678910111213141516171819copy:function ()&#123; if(wx.setClipboardData)&#123; wx.setClipboardData(&#123; data:&quot;复制文字&quot;， success：function(res)&#123; wx.showModal(&#123; title:&quot;复制&quot;, content:&quot;内容已经复制成功&quot; &#125;) &#125; &#125;) &#125;else &#123; wx.showModal(&#123; title:&quot;提示&quot;, content:&quot;您的微信版本太低，请升级&quot; &#125;) &#125;&#125; 不同页面的传值 123456toDetail: function(e)&#123; var index = e.currentTarget.dataset.index; wx.navigateTo (&#123; url: &apos;page/detail/detail?title&apos; &#125;)&#125;]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
</search>
